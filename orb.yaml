version: 2.1
description: Send build and deploy events to SignalFx
display:
  source_url: https://github.com/kikeyama/circleci-orb-signalfx-events

orbs:
  signalfx:
    executors:
      base:
        docker:
          - image: cibuilds/base:latest
            environment:
              TERM: dumb
        resource_class: small
    commands:
      job-event:
        description: Send job event to SignalFx
        parameters:
          signalfx_access_token:
            default: ${SIGNALFX_ACCESS_TOKEN}
            description: Enter SignalFx access token or set env var SIGNALFX_ACCESS_TOKEN
            type: string
          signalfx_realm:
            default: ${SIGNALFX_REALM}
            description: Enter SignalFx realm (us0, us1, eu0, etc) or set env var SIGNALFX_REALM
            type: string
          service:
            default: ${CIRCLE_PROJECT_REPONAME}
            description: Service name used in SignalFx dimension
            type: string
          event_type:
            default: ${CIRCLE_JOB}
            description: Enter job event name (e.g. deploy | build | rollback)
            type: string
        steps:
          - run:
              when: on_success
              name: set_status_success
              command: |
                echo 'export BUILD_STATUS="success"' >> $BASH_ENV
          - run:
              when: on_fail
              name: set_status_failure
              command: |
                echo 'export BUILD_STATUS="failure"' >> $BASH_ENV
          - run: 
              command: |
                curl -X POST -H "Content-Type: application/json" \
                -H "X-SF-Token: <<parameters.signalfx_access_token>>" --data \
                "[
                  {
                    \"eventType\": \"CircleCI <<parameters.event_type>>\",
                    \"dimensions\": {
                      \"service\": \"<<parameters.service>>\"
                    },
                    \"properties\": {
                      \"vcs_revision\": \"$CIRCLE_SHA1\",
                      \"build_num\": \"$CIRCLE_BUILD_NUM\",
                      \"status\": \"$BUILD_STATUS\",
                      \"build_url\": \"$CIRCLE_BUILD_URL\",
                      \"user\": \"$CIRCLE_USERNAME\"
                    },
                    \"category\": \"USER_DEFINED\",
                    \"timestamp\": $((`date +%s` * 1000))
                  }
                ]" \
                https://ingest.<<parameters.signalfx_realm>>.signalfx.com/v2/event
              name: send_signalfx_event
    jobs:
      workflow-event:
        parameters:
          signalfx_access_token:
            default: ${SIGNALFX_ACCESS_TOKEN}
            description: Enter SignalFx access token or set env var SIGNALFX_ACCESS_TOKEN
            type: string
          signalfx_realm:
            default: ${SIGNALFX_REALM}
            description: Enter SignalFx realm (us0, us1, eu0, etc) or set env var SIGNALFX_REALM
            type: string
          service:
            default: ${CIRCLE_PROJECT_REPONAME}
            description: Service name used in SignalFx dimension
            type: string
          event_type:
            default: ${CIRCLE_WORKFLOW_ID}
            description: Enter workflow event name (e.g. deploy | build | rollback)
            type: string
        executor: base
        steps:
          - job-event:
              signalfx_access_token: <<parameters.signalfx_access_token>>
              signalfx_realm: <<parameters.signalfx_realm>>
              service: <<parameters.service>>
              event_type: <<parameters.event_type>>

examples:
  workflow-event:
    usage:
      version: 2.1
      description: Send workflow event to SignalFx
      orbs:
        signalfx: kikeyama/signalfx@x.y.z
      workflows:
        main:
          jobs:
            - signalfx/workflow-event:
                name: signalfx_workflow_event
                signalfx_access_token: ${SIGNALFX_ACCESS_TOKEN}
                signalfx_realm: ${SIGNALFX_REALM}
                service: service_name
                event_type: deploy
  job-event:
    usage:
      version: 2.1
      description: Send job event to SignalFx
      jobs:
        build:
          docker:
            - image: <docker image>
          steps:
            - signalfx/job-event:
                name: signalfx_job_event
                signalfx_access_token: ${SIGNALFX_ACCESS_TOKEN}
                signalfx_realm: ${SIGNALFX_REALM}
                service: service_name
                event_type: build my app
      orbs:
        signalfx: kikeyama/signalfx@x.y.z
